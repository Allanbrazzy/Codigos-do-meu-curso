/*5. Liste a tabela TB_PEDIDO com valor total (VLR_TOTAL) acima de R$ 15.000,00;*/
SELECT *
FROM TB_PEDIDO
WHERE
VLR_TOTAL > 15000

/*6. Liste os produtos com QTD_REAL entre 500 e 1000 unidades;*/
SELECT *
FROM TB_PRODUTO
WHERE QTD_REAL > 500 AND QTD_REAL < 1000;

/*7. Liste os pedidos com valor total entre R$ 15.000,00 e R$ 25.000,00;*/
SELECT * 
FROM TB_PEDIDO
WHERE VLR_TOTAL > 15000 AND VLR_TOTAL < 25000;

/*8. Liste os produtos com quantidade real acima de 5000 e código do tipo igual a 6;*/
SELECT *
FROM TB_PRODUTO
WHERE QTD_REAL > 5000 AND ID_TIPO = 6

/*9. Liste os produtos com quantidade real acima de 5000 ou código do tipo igual a 6;*/
SELECT *
FROM TB_PRODUTO
WHERE QTD_REAL > 5000 OR ID_TIPO = 6

/*
10. Liste os pedidos com valor total inferior a R$ 100,00 ou acima de R$ 100.000,00;
*/
SELECT * 
FROM TB_PEDIDO 
WHERE
VLR_TOTAL < 100 OR VLR_TOTAL > 100000

/*
11. Liste os produtos com QTD_REAL menor que 500 ou maior que 1000
*/
SELECT *
FROM TB_PRODUTO
WHERE QTD_REAL < 500 OR QTD_REAL > 1000

/*2. Liste os clientes (ID_CLIENTE) do estado de São Paulo (SP). Para essa consulta, 
utilize a tabela TB_ENDERECO;*/
SELECT id_cliente, ESTADO 
FROM TB_ENDERECO
WHERE
ESTADO = 'SP';

/*
3. Liste os clientes dos estados de Minas Gerais e Rio de Janeiro (MG, RJ);
*/

SELECT id_cliente, ESTADO 
FROM TB_ENDERECO
WHERE
ESTADO IN ('MG','RJ');
impactatreinamentos 2120:32
/*
5. Realize uma pesquisa que retorne o nome do empregado MARCO;
*/
SELECT *
FROM TB_EMPREGADO
WHERE
NOME LIKE 'MARCO%';

/*10. Liste todos os produtos com DESCRICAO contendo SPECIAL;*/
SELECT *
FROM TB_PRODUTO
WHERE DESCRICAO LIKE '%SPECIAL%'

/*12. Liste todos os clientes que tenham a letra A como segundo caractere do nome;*/
SELECT * 
FROM TB_CLIENTE
WHERE NOME LIKE '_A%';

/*14. Liste todas as cidades que possuam o nome brasil*/
SELECT * 
FROM TB_ENDERECO
WHERE
CIDADE LIKE '%BRASIL%'

lab 4

/*2. Liste todos os pedidos com data de emissão anterior a Jan/2017*/
SELECT *
FROM TB_PEDIDO
WHERE
YEAR(DATA_EMISSAO) <=2016 AND MONTH(DATA_EMISSAO) <= 12
ORDER BY DATA_EMISSAO DESC

/*
3. Liste todos os pedidos com data de emissão no primeiro semestre de 2018;
*/

SELECT * 
FROM TB_PEDIDO
WHERE
YEAR(DATA_EMISSAO) = 2018 AND MONTH(DATA_EMISSAO)

/*
4. Liste todos os pedidos com data de emissão em janeiro e junho de 2016;
*/

SELECT *
FROM TB_PEDIDO
WHERE
YEAR(DATA_EMISSAO) = 2016
AND
(MONTH(DATA_EMISSAO) = 1 OR MONTH(DATA_EMISSAO) = 6)

/*6. Liste os pedidos emitidos em Jan/2017 em uma sexta-feira*/

SELECT ID_PEDIDO,
       DATA_EMISSAO,
	   DATENAME(WEEKDAY,DATA_EMISSAO) DIA_SEMANA
FROM
    TB_PEDIDO
WHERE
    YEAR(DATA_EMISSAO) = 2017 AND MONTH(DATA_EMISSAO) = 1
AND
    DATENAME(WEEKDAY,DATA_EMISSAO) = 'Friday';

usando o join
/*8. Liste os produtos com quantidade real acima de 5000 e o tipo igual a 'CHAVEIRO';*/
	
	SELECT P.ID_PRODUTO,
	       P.DESCRICAO,
		   P.id_tipo,
		   P.QTD_REAL,
		   T.ID_TIPO,
		   T.TIPO
	FROM TB_PRODUTO P
	JOIN TB_TIPOPRODUTO T ON 
	P.ID_TIPO = T.ID_TIPO
	WHERE
	P.QTD_REAL > 5000
	AND
	T.TIPO = 'CHAVEIRO'

COMANDO PARA ACHAR A LIGAÇÃO ENTRE AS TABELAS 
exec sp_help tb_pedido

14. Liste os nomes de produtos (TB_PRODUTO.DESCRICAO) que foram vendidos em 
janeiro de 2019;
*/
SELECT P.DESCRICAO,
       PE.DATA_EMISSAO
FROM TB_PRODUTO AS P JOIN TB_ITENSPEDIDO AS IT
ON P.ID_PRODUTO = IT.ID_PRODUTO
JOIN TB_PEDIDO AS PE
ON IT.ID_PEDIDO = PE.ID_PEDIDO
WHERE
YEAR(PE.DATA_EMISSAO) = 2019
AND
MONTH(PE.DATA_EMISSAO) = 1

/*
13. Liste os nomes dos clientes (TB_CLIENTE.NOME) que efetuaram compras em 
janeiro de 2018;
*/
SELECT C.NOME,
       P.DATA_EMISSAO
FROM TB_PEDIDO AS P JOIN TB_CLIENTE AS C
ON P.ID_CLIENTE = C.ID_CLIENTE
WHERE
YEAR(P.DATA_EMISSAO) = 2018 AND MONTH(P.DATA_EMISSAO) = 1;

/*
12. Liste todos os pedidos (TB_PEDIDO) do vendedor MARCELO em Jan/2017;
*/
SELECT  P.ID_PEDIDO,
        P.DATA_EMISSAO,
		E.NOME
FROM TB_PEDIDO AS P JOIN TB_EMPREGADO AS E
ON P.ID_EMPREGADO = E.ID_EMPREGADO
WHERE
E.NOME = 'MARCELO'
AND
YEAR(P.DATA_EMISSAO) = 2017 AND MONTH(P.DATA_EMISSAO) = 1

/*
15. Liste NUM_PEDIDO, VLR_TOTAL (PEDIDOS) e NOME (TB_CLIENTE). Mostre 
apenas pedidos de janeiro de 2017 do estado de SP
*/

SELECT  PE.ID_PEDIDO,PE.VLR_TOTAL,
		C.NOME,E.ESTADO,PE.DATA_EMISSAO
FROM TB_CLIENTE AS C JOIN TB_PEDIDO AS PE
ON C.ID_CLIENTE = PE.ID_CLIENTE
JOIN TB_ENDERECO AS E
ON C.ID_CLIENTE = E.id_cliente
WHERE
E.ESTADO = 'SP'
AND 
YEAR(PE.DATA_EMISSAO) = 2017
AND
MONTH(PE.DATA_EMISSAO) = 1

/*
16. Liste NUM_PEDIDO, QUANTIDADE vendida e PR_UNITARIO (TB_ITENSPEDIDO),
DESCRICAO (TB_PRODUTO), NOME do vendedor que vendeu cada item de pedido 
(TB_VENDEDOR);
*/
SELECT IT.ID_PEDIDO,
       IT.QUANTIDADE,
	   IT.PR_UNITARIO,
	   P.DESCRICAO,
	   E.NOME
FROM TB_ITENSPEDIDO AS IT JOIN TB_PRODUTO AS P
ON IT.ID_PRODUTO = P.ID_PRODUTO
JOIN TB_PEDIDO AS PE
ON IT.ID_PEDIDO = PE.ID_PEDIDO
JOIN TB_EMPREGADO AS E
ON E.ID_EMPREGADO = PE.ID_EMPREGADO

/*
17. Liste o número do pedido e o valor dos pedidos de cor verde de 2018;
*/
SELECT IT.ID_PEDIDO,
       IT.PR_UNITARIO,
	   CO.COR,
	   IT.DATA_ENTREGA
FROM TB_ITENSPEDIDO AS IT JOIN TB_COR AS CO
ON IT.id_cor = CO.ID_COR
WHERE
CO.COR = 'VERDE'
AND
YEAR(IT.DATA_ENTREGA) = 2018

*/
SELECT C.ID_CLIENTE,
       C.NOME,
	   PE.DATA_EMISSAO,
	   E.ESTADO
FROM TB_CLIENTE AS C JOIN TB_PEDIDO AS PE
ON C.ID_CLIENTE = PE.ID_CLIENTE
JOIN TB_ENDERECO AS E
ON E.id_cliente = C.ID_CLIENTE
WHERE
E.ESTADO = 'SP'
AND
MONTH(PE.DATA_EMISSAO) = 2 AND YEAR(PE.DATA_EMISSAO) = 2017

/*
19. Liste os produtos fornecidos pelos fornecedores que iniciam com a letra A.
*/
SELECT P.ID_PRODUTO,
       P.DESCRICAO,
	   F.NOME,
	   F.NOME_FANTASIA
FROM TB_PRODUTO AS P JOIN TB_PRODUTO_FORNECEDOR AS PF
ON P.ID_PRODUTO = PF.ID_PRODUTO
JOIN TB_FORNECEDOR AS F
ON F.ID_FORNECEDOR = PF.ID_FORNECEDOR
WHERE
F.NOME LIKE 'A%'

consultando subconsultas usa a quarry 

select *
from TB_EMPREGADO
where
SALARIO > (select avg(SALARIO) from TB_EMPREGADO)

select TB_PEDIDO.ID_PEDIDO,
       TB_PEDIDO.DATA_EMISSAO,
	   TB_PEDIDO.VLR_TOTAL,
	   TB_EMPREGADO.NOME
	  
from TB_PEDIDO
inner join TB_EMPREGADO on TB_EMPREGADO.ID_EMPREGADO = TB_PEDIDO.ID_EMPREGADO;

select TB_PEDIDO.ID_PEDIDO,
       TB_PEDIDO.DATA_EMISSAO,
	   TB_PEDIDO.VLR_TOTAL,
	   TB_CLIENTE.NOME

from TB_PEDIDO
join TB_CLIENTE on TB_PEDIDO.ID_CLIENTE = TB_CLIENTE.ID_CLIENTE;

select TB_PEDIDO.ID_EMPREGADO,
       TB_CLIENTE.NOME,
	   TB_CLIENTE.ID_CLIENTE,
	   TB_EMPREGADO.NOME
       
	
from TB_PEDIDO
inner join TB_EMPREGADO on TB_EMPREGADO.ID_EMPREGADO = TB_PEDIDO.ID_EMPREGADO
inner join TB_CLIENTE on TB_CLIENTE.ID_CLIENTE = TB_PEDIDO.ID_CLIENTE

SELECT P.ID_PEDIDO,
       E.NOME,
	   CA.CARGO
FROM TB_PEDIDO AS P JOIN TB_EMPREGADO AS E
ON P.ID_EMPREGADO = E.ID_EMPREGADO
JOIN TB_CARGO AS CA 
ON E.ID_CARGO = CA.ID_CARGO

select *

from TB_ITENSPEDIDO

select TB_PRODUTO.ID_PRODUTO,
       TB_PRODUTO.DESCRICAO,
	   TB_ITENSPEDIDO.ID_PRODUTO,
	   TB_ITENSPEDIDO.ITEM

from TB_PRODUTO
inner join TB_ITENSPEDIDO on TB_ITENSPEDIDO.ID_PRODUTO = TB_PRODUTO.ID_PRODUTO;

select TB_COR.ID_COR,
       TB_COR.COR,
	   TB_ITENSPEDIDO.ITEM,
	   TB_ITENSPEDIDO.id_cor

from TB_COR
inner join TB_ITENSPEDIDO on TB_ITENSPEDIDO.id_cor = TB_COR.ID_COR

select TB_PRODUTO.ID_PRODUTO,
       TB_PRODUTO.DESCRICAO,
	   TB_TIPOPRODUTO.TIPO

from TB_PRODUTO
inner join TB_TIPOPRODUTO on TB_TIPOPRODUTO.ID_TIPO = TB_PRODUTO.id_tipo

select TB_PRODUTO.ID_PRODUTO,
       TB_PRODUTO.DESCRICAO,
	   TB_TIPOPRODUTO.TIPO,
	   TB_UNIDADE.UNIDADE

from TB_PRODUTO
inner join TB_TIPOPRODUTO on TB_TIPOPRODUTO.ID_TIPO = TB_PRODUTO.id_tipo
inner join TB_UNIDADE on TB_UNIDADE.ID_UNIDADE = TB_PRODUTO.id_unidade;

select TB_ITENSPEDIDO.ID_PRODUTO,
       TB_ITENSPEDIDO.PR_UNITARIO,
	   TB_ITENSPEDIDO.QUANTIDADE,
	   TB_ITENSPEDIDO.ID_PRODUTO as num_item,
	   TB_ITENSPEDIDO.ID_PEDIDO as num_pedido,
	   TB_PRODUTO.DESCRICAO,
	   TB_PRODUTO.ID_PRODUTO as cod_produto,
	   TB_TIPOPRODUTO.TIPO,
	   TB_UNIDADE.UNIDADE

from TB_PRODUTO
inner join TB_ITENSPEDIDO on TB_ITENSPEDIDO.ID_PRODUTO = TB_PRODUTO.ID_PRODUTO
inner join TB_TIPOPRODUTO on TB_TIPOPRODUTO.ID_TIPO = TB_PRODUTO.id_tipo
inner join TB_UNIDADE on TB_UNIDADE.ID_UNIDADE = TB_PRODUTO.id_unidade

select TB_ITENSPEDIDO.ID_PRODUTO,
       TB_ITENSPEDIDO.PR_UNITARIO,
	   TB_ITENSPEDIDO.QUANTIDADE,
	   TB_ITENSPEDIDO.ID_PRODUTO as num_item,
	   TB_ITENSPEDIDO.ID_PEDIDO as num_pedido,
	   TB_PRODUTO.DESCRICAO,
	   TB_PRODUTO.ID_PRODUTO,
	   TB_TIPOPRODUTO.TIPO as descrição,
	   TB_UNIDADE.UNIDADE,
	   TB_COR.COR

from TB_PRODUTO
inner join TB_ITENSPEDIDO on TB_ITENSPEDIDO.ID_PRODUTO = TB_PRODUTO.ID_PRODUTO
inner join TB_TIPOPRODUTO on TB_TIPOPRODUTO.ID_TIPO = TB_PRODUTO.id_tipo
inner join TB_UNIDADE on TB_UNIDADE.ID_UNIDADE = TB_PRODUTO.id_unidade
inner join TB_COR on TB_COR.ID_COR = TB_PRODUTO.ID_PRODUTO

select TB_PEDIDO.ID_PEDIDO,
       TB_PEDIDO.ID_CLIENTE,
	   TB_PEDIDO.DATA_EMISSAO,
	   TB_EMPREGADO.NOME,
	   TB_EMPREGADO.ID_CARGO

from TB_PEDIDO
inner join TB_EMPREGADO on TB_EMPREGADO.ID_EMPREGADO = TB_PEDIDO.ID_EMPREGADO
where TB_EMPREGADO.NOME = 'marcelo' 

respostas das que não fiz 

14. Liste os nomes de produtos (TB_PRODUTO.DESCRICAO) que foram vendidos em 
janeiro de 2019;
*/
SELECT P.DESCRICAO,
       PE.DATA_EMISSAO
FROM TB_PRODUTO AS P JOIN TB_ITENSPEDIDO AS IT
ON P.ID_PRODUTO = IT.ID_PRODUTO
JOIN TB_PEDIDO AS PE
ON IT.ID_PEDIDO = PE.ID_PEDIDO
WHERE
YEAR(PE.DATA_EMISSAO) = 2019
AND
MONTH(PE.DATA_EMISSAO) = 1

/*
13. Liste os nomes dos clientes (TB_CLIENTE.NOME) que efetuaram compras em 
janeiro de 2018;
*/
SELECT C.NOME,
       P.DATA_EMISSAO
FROM TB_PEDIDO AS P JOIN TB_CLIENTE AS C
ON P.ID_CLIENTE = C.ID_CLIENTE
WHERE
YEAR(P.DATA_EMISSAO) = 2018 AND MONTH(P.DATA_EMISSAO) = 1;

/*
12. Liste todos os pedidos (TB_PEDIDO) do vendedor MARCELO em Jan/2017;
*/
SELECT  P.ID_PEDIDO,
        P.DATA_EMISSAO,
		E.NOME
FROM TB_PEDIDO AS P JOIN TB_EMPREGADO AS E
ON P.ID_EMPREGADO = E.ID_EMPREGADO
WHERE
E.NOME = 'MARCELO'
AND
YEAR(P.DATA_EMISSAO) = 2017 AND MONTH(P.DATA_EMISSAO) = 1

/*
15. Liste NUM_PEDIDO, VLR_TOTAL (PEDIDOS) e NOME (TB_CLIENTE). Mostre 
apenas pedidos de janeiro de 2017 do estado de SP
*/

SELECT  PE.ID_PEDIDO,PE.VLR_TOTAL,
		C.NOME,E.ESTADO,PE.DATA_EMISSAO
FROM TB_CLIENTE AS C JOIN TB_PEDIDO AS PE
ON C.ID_CLIENTE = PE.ID_CLIENTE
JOIN TB_ENDERECO AS E
ON C.ID_CLIENTE = E.id_cliente
WHERE
E.ESTADO = 'SP'
AND 
YEAR(PE.DATA_EMISSAO) = 2017
AND
MONTH(PE.DATA_EMISSAO) = 1

/*
16. Liste NUM_PEDIDO, QUANTIDADE vendida e PR_UNITARIO (TB_ITENSPEDIDO),
DESCRICAO (TB_PRODUTO), NOME do vendedor que vendeu cada item de pedido 
(TB_VENDEDOR);
*/
SELECT IT.ID_PEDIDO,
       IT.QUANTIDADE,
	   IT.PR_UNITARIO,
	   P.DESCRICAO,
	   E.NOME
FROM TB_ITENSPEDIDO AS IT JOIN TB_PRODUTO AS P
ON IT.ID_PRODUTO = P.ID_PRODUTO
JOIN TB_PEDIDO AS PE
ON IT.ID_PEDIDO = PE.ID_PEDIDO
JOIN TB_EMPREGADO AS E
ON E.ID_EMPREGADO = PE.ID_EMPREGADO

/*
17. Liste o número do pedido e o valor dos pedidos de cor verde de 2018;
*/
SELECT IT.ID_PEDIDO,
       IT.PR_UNITARIO,
	   CO.COR,
	   IT.DATA_ENTREGA
FROM TB_ITENSPEDIDO AS IT JOIN TB_COR AS CO
ON IT.id_cor = CO.ID_COR
WHERE
CO.COR = 'VERDE'
AND
YEAR(IT.DATA_ENTREGA) = 2018

*/
SELECT C.ID_CLIENTE,
       C.NOME,
	   PE.DATA_EMISSAO,
	   E.ESTADO
FROM TB_CLIENTE AS C JOIN TB_PEDIDO AS PE
ON C.ID_CLIENTE = PE.ID_CLIENTE
JOIN TB_ENDERECO AS E
ON E.id_cliente = C.ID_CLIENTE
WHERE
E.ESTADO = 'SP'
AND
MONTH(PE.DATA_EMISSAO) = 2 AND YEAR(PE.DATA_EMISSAO) = 2017

/*
19. Liste os produtos fornecidos pelos fornecedores que iniciam com a letra A.
*/
SELECT P.ID_PRODUTO,
       P.DESCRICAO,
	   F.NOME,
	   F.NOME_FANTASIA
FROM TB_PRODUTO AS P JOIN TB_PRODUTO_FORNECEDOR AS PF
ON P.ID_PRODUTO = PF.ID_PRODUTO
JOIN TB_FORNECEDOR AS F
ON F.ID_FORNECEDOR = PF.ID_FORNECEDOR
WHERE
F.NOME LIKE 'A%'

aula de subconsulta

/*
2. Selecione os clientes que não compraram em Março de 2019;
*/
SELECT ID_CLIENTE,
       DATA_EMISSAO
FROM TB_PEDIDO
WHERE
ID_CLIENTE NOT IN (SELECT ID_CLIENTE
            FROM TB_PEDIDO
			WHERE
			YEAR(DATA_EMISSAO)=2019 AND MONTH(DATA_EMISSAO)=3)

/*
 3. Selecione os produtos que nunca foram vendidos;
*/
SELECT * 
FROM TB_PRODUTO
WHERE
ID_PRODUTO NOT IN (SELECT ID_PRODUTO 
FROM TB_ITENSPEDIDO
)

/*
4. Apresente os cargos que não possuem funcionários cadastrados;
*/
SELECT *
FROM TB_CARGO
WHERE
ID_CARGO NOT IN (SELECT ID_CARGO 
FROM TB_EMPREGADO
WHERE
ID_CARGO IS NOT NULL)

/*
5. Apresente os produtos vendidos em Abril de 2018 que não são da cor PRATA;
*/
SELECT *
FROM TB_ITENSPEDIDO AS IT JOIN TB_PEDIDO AS P
ON IT.ID_PEDIDO = P.ID_PEDIDO
WHERE
YEAR(P.DATA_EMISSAO) = 2018 AND MONTH(P.DATA_EMISSAO) = 4
AND
IT.id_cor NOT IN (SELECT ID_COR
                  FROM TB_COR
				  WHERE COR = 'PRATA')

/*
6. Apresente os produtos que foram vendidos em abril de 2017, menos CHAVE 
DESMONTADO;
*/

SELECT *
FROM TB_PRODUTO AS P JOIN TB_ITENSPEDIDO AS IT
ON P.ID_PRODUTO = IT.ID_PRODUTO
JOIN TB_PEDIDO AS PE
ON IT.ID_PEDIDO = PE.ID_PEDIDO
WHERE
YEAR(PE.DATA_EMISSAO) = 2017 AND MONTH(PE.DATA_EMISSAO) = 4
AND
P.ID_PRODUTO <> (SELECT ID_PRODUTO
FROM TB_PRODUTO
WHERE
DESCRICAO LIKE 'CHAVEIRO DESMONTADO'
)
ORDER BY P.DESCRICAO



/*
7. Apresente os vendedores que não venderam em Dezembro de 2019;
*/
SELECT *
FROM TB_EMPREGADO
WHERE
ID_EMPREGADO NOT IN (SELECT ID_EMPREGADO
              FROM TB_PEDIDO
			  WHERE
			  YEAR(DATA_EMISSAO) = 2019 AND MONTH(DATA_EMISSAO) = 12
)


/*
8. Apresente os clientes que compraram, em Fevereiro de 2018, produtos da cor 
AZUL;
*/

SELECT * 
FROM TB_CLIENTE AS C JOIN TB_PEDIDO AS PE
ON C.ID_CLIENTE = PE.ID_CLIENTE
JOIN TB_ITENSPEDIDO AS IT 
ON PE.ID_PEDIDO = IT.ID_PEDIDO
WHERE
YEAR(PE.DATA_EMISSAO) = 2018 AND MONTH(PE.DATA_EMISSAO) = 2
AND
IT.id_cor = (SELECT ID_COR
             FROM TB_COR
			 WHERE COR = 'AZUL'
             )

/*
9. Apresente os empregados que não possuem dependentes e cargo que não seja 
MOTORISTA;
*/

SELECT E.*,
       C.CARGO,
	   C.SALARIO_INIC
FROM TB_EMPREGADO AS E JOIN TB_CARGO AS C
ON E.ID_CARGO = C.ID_CARGO
WHERE
NUM_DEPEND = 0
AND
E.ID_CARGO <> (SELECT ID_CARGO
             FROM TB_CARGO
			 WHERE
			 CARGO = 'MOTORISTA'
             )

/*
10. Apresente os empregados de cargo VENDEDOR(A) que não realizaram vendas em 
abril de 2018.
*/
SELECT *
FROM TB_EMPREGADO AS E JOIN TB_CARGO AS C
ON E.ID_CARGO = C.ID_CARGO
WHERE
E.ID_CARGO = (SELECT ID_CARGO
              FROM TB_CARGO
			  WHERE
			  CARGO = 'VENDEDOR(A)')
AND
E.ID_EMPREGADO NOT IN (SELECT E.ID_EMPREGADO
                FROM TB_EMPREGADO AS E JOIN TB_PEDIDO AS PE
				ON E.ID_EMPREGADO = PE.ID_EMPREGADO
				WHERE
				YEAR(PE.DATA_EMISSAO) = 2018 AND MONTH(PE.DATA_EMISSAO)
SELECT	*
FROM TB_EMPREGADO AS E
INNER JOIN TB_CARGO AS C ON E.ID_CARGO = C.ID_CARGO
WHERE E.ID_CARGO = (SELECT ID_CARGO FROM TB_CARGO
					WHERE CARGO = 'VENDEDOR(A)')
AND E.ID_EMPREGADO NOT IN (SELECT ID_EMPREGADO FROM TB_PEDIDO
					WHERE YEAR(DATA_EMISSAO) =2018
					AND MONTH(DATA_EMISSAO) = 04)


segregação de tBELAS 

ONDE VC USA ESSES COMANDOS PARA ACHAR VALORES OU SOMAR ELES 

select count(*) as numero_registros
 from TB_EMPREGADO 

 select min(salario) as menor_sal
 from TB_EMPREGADO

 select max(salario) as maior_sal
 from TB_EMPREGADO

 select sum(salario) as somatorio_sal
 from TB_EMPREGADO

EXEMPLO USANDO "GTOUP BY" 

SELECT E.ID_DEPARTAMENTO,
        D.DEPARTAMENTO,
		SUM(SALARIO) AS SALARIO_TOTAL
 FROM TB_EMPREGADO AS E JOIN TB_DEPARTAMENTO AS D ON E.ID_DEPARTAMENTO = D.ID_DEPARTAMENTO
 WHERE
 SALARIO IS NOT NULL
 GROUP BY E.ID_DEPARTAMENTO, D.DEPARTAMENTO
 ORDER BY SALARIO_TOTAL

HAVING- a clausula having determina uma condição de busca para um grupo ou um conjunto de registro


exemplo 

SELECT E.ID_DEPARTAMENTO,
        D.DEPARTAMENTO,
		SUM(SALARIO) AS SALARIO_TOTAL
 FROM TB_EMPREGADO AS E JOIN TB_DEPARTAMENTO AS D ON E.ID_DEPARTAMENTO = D.ID_DEPARTAMENTO
 WHERE
 SALARIO IS NOT NULL
 and SALARIO > 1000
 GROUP BY E.ID_DEPARTAMENTO, D.DEPARTAMENTO
 having sum(salario) > 15000
 ORDER BY SALARIO_TOTAL desc

